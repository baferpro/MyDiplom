//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyDiplom.db
{
    using System;
    using System.Collections.Generic;
    
    public partial class Document
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Document()
        {
            this.Action = new HashSet<Action>();
            this.Affiliation = new HashSet<Affiliation>();
            this.Approval = new HashSet<Approval>();
        }
    
        public int Id { get; set; }
        public string Name { get; set; }
        public string Descript { get; set; }
        public int DocumentTypeId { get; set; }
        public Nullable<int> PrivacyTypeId { get; set; }
        public int DocumentStatusId { get; set; }
        public string Number { get; set; }
        public System.DateTime CreateDate { get; set; }
        public int AuthorId { get; set; }
        public bool IsImportant { get; set; }
        public bool IsUrgent { get; set; }
        public byte[] File { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Action> Action { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Affiliation> Affiliation { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Approval> Approval { get; set; }
        public virtual DocumentStatus DocumentStatus { get; set; }
        public virtual DocumentType DocumentType { get; set; }
        public virtual PrivacyType PrivacyType { get; set; }
        public virtual User User { get; set; }
    }
}
